pipeline {
    agent any

    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs() // Cleans up the workspace
            }
        }

        stage('Clone Repository') {
            steps {
                checkout scm // Clones the current repository
            }
        }

        stage('Stop and Remove Existing Container') {
            steps {
                sh '''
                    docker stop dev-container || true
                    docker rm dev-container || true
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                    docker build -t realsahilthakur/devops-bookstore .
                '''
            }
        }

        stage('Test Docker Container') {
            steps {
                sh '''
                    docker run -d --name dev-container -p 8081:80 realsahilthakur/devops-bookstore
                    curl -I http://localhost:8081
                '''
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerpassword', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                        docker login -u $USERNAME -p $PASSWORD
                        docker tag realsahilthakur/devops-bookstore realsahilthakur/devops-bookstore:develop-${BUILD_ID}
                        docker push realsahilthakur/devops-bookstore
                        docker push realsahilthakur/devops-bookstore:develop-${BUILD_ID}
                    '''
                }
            }
        }

        stage('Trigger Staging Pipeline') {
            steps {
                build job: 'BookStaging' // Trigger the staging pipeline
            }
        }
    }

    post {
        always {
            echo 'Development pipeline completed!'
        }
    }
}
